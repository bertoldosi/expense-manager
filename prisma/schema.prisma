datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  account       Account[]
  session       Session[]
  card          Card[]

  @@map("users")
}

model Card {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  createAt DateTime   @default(now())
  user     User       @relation(fields: [userId], references: [id])
  userId   String     @unique @db.ObjectId
  purchage Purchage[]

  @@map("cards")
}

model Purchage {
  id            String   @id @map("_id") @db.ObjectId
  position      Int
  description   String
  category      String
  amount        String
  paymentStatus String
  createAt      DateTime @default(now())
  card          Card     @relation(fields: [cardId], references: [id])
  cardId        String   @db.ObjectId

  @@map("purchages")
}
